// Boost Software Lisence Version 1.0
#ifndef __CCWRAP_CSTDINT_INCLUDED
#define __CCWRAP_CSTDINT_INCLUDED

#include <ccwrap_common.h>

#if __CCWRAP_CXX >= 201103L || __CCWRAP_HAS_STDINT
 #if defined(__CCWRAP_HAS_INCLUDE_NEXT)
  #include_next <cstdint>
 #elif defined(__CCWRAP_NATIVE_STL_HEADER_PATH)
  #include __CCWRAP_NATIVE_STL_HEADER_PATH(cstdint)
 #elif defined(__CCWRAP_NATIVE_C_HEADER_PATH)
  #include __CCWRAP_NATIVE_C_HEADER_PATH(cstdint)
 #else
  #include <../include/cstdint>
 #endif
 #include <stdint.h>
#else
 #include <stdint.h>
 namespace std {
    using ::int8_t;
    using ::uint8_t;
    using ::int16_t;
    using ::uint16_t;
    using ::int32_t;
    using ::uint32_t;
    using ::int64_t;
    using ::uint64_t;

    using ::intmax_t;
    using ::uintmax_t;

    using ::intptr_t;
    using ::uintptr_t;

    using ::int_least8_t;
    using ::uint_least8_t;
    using ::int_least16_t;
    using ::uint_least16_t;
    using ::int_least32_t;
    using ::uint_least32_t;
    using ::int_least64_t;
    using ::uint_least64_t;

    using ::int_fast8_t;
    using ::uint_fast8_t;
    using ::int_fast16_t;
    using ::uint_fast16_t;
    using ::int_fast32_t;
    using ::uint_fast32_t;
    using ::int_fast64_t;
    using ::uint_fast64_t;
 }   // std
#endif

#include <_ccwrap_detail/cstdint.hxx>

#endif	// __CCWRAP_CSTDINT_INCLUDED
