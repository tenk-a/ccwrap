#ifndef __CCWRAP_STRING_VIEW_INCLUDED
#define __CCWRAP_STRING_VIEW_INCLUDED

#include "../boost2std/boost2std_common.hpp"
#include <cstddef>

#if !defined(__CCWRAP_NO_HEADER_STRING_VIEW)
 #ifdef __CCWRAP_NATIVE_STL_HEADER_PATH
  #include __CCWRAP_NATIVE_STL_HEADER_PATH(string_view)
 #elif defined(__CCWRAP_HAS_INCLUDE_NEXT)
  #include_next <string_view>
 #else
  //#include <../include/string_view>
 #endif
#else // defined __CCWRAP_NO_HEADER_STRING_VIEW
#include <boost/utility/string_view.hpp>
namespace std {
    using boost::basic_string_view;
    using boost::string_view;
    using boost::wstring_view;
 #if 0
    using boost::u8string_view;
    using boost::u16string_view;
    using boost::u32string_view;
 #elif 0    // vc12.0 or later
    using u8string_view = basic_string_view<char8_t>;
    using u16string_view = basic_string_view<char16_t>;
    using u32string_view = basic_string_view<char32_t>;
 #else
    typedef basic_string_view<char8_t>  u8string_view;
    typedef basic_string_view<char16_t> u16string_view;
    typedef basic_string_view<char32_t> u32string_view;
 #endif
}
#endif

#endif  // __CCWRAP_STRING_INCLUDED
